/*
You want to play Snakes and Ladders on your computer, so you found a board and created a list of objects corresponding to the snakes and ladders in the game. Because you need practice in classes for the AP exam coming up, you decide that you are going to implement everything from scratch using various self-made classes. You have been able to split the game into three classes:

StartToEnd
DieRoll
SnakesAndLaddersSimulator.

StartToEnd instantiates the ladders and snakes.
DieRolls mimics a set of 2 die, and returns their summed response. SnakesAndLaddersSimulator runs the game.
*/

/* Random.random() returns a value between 0 (inclusive) and 1 (exclusive) */
import java.util.Random;

class StartToEnd {
    /* Lower point of a snake or ladder */
    final int lowerPoint;
    /* Upper point of a snake or ladder */
    final int upperPoint;
    /* Whether this object is a snake or a ladder. If this statement is true, object is a ladder. Else, it is a snake. */
    final boolean isLadder;

    /*Initializes StartToEnd instance based on arguments passed into it.*/
    public StartToEnd(int lower, int upper, boolean isL) {
        this.lowerPoint = lower;
        this.upperPoint = upper;
        this.isLadder   = isL;
    }

    /*Returns lowerPoint*/
    public int getLowerPoint()
    {/* Method not implemented */}

    /* Returns upperPoint */
    public int getUpperPoint()
    {/*  Method not implemented */}

    /* Returns isLadder */
    public boolean isThisLadder()
    {/* Method not implemented */}

}

class DieRoll {

    /*Mimics 2 die rolls of die from 1-6 and returns sum.*/
    public int getNextNumber()
    {/* Method not implemented */}
}

public class SnakesAndLaddersSimulator {

    /* List of snakes and ladders present in game. */
    private static final StartToEnd[] objects = {
            new StartToEnd( 4, 14, true ), new StartToEnd( 7, 17, false), 
            new StartToEnd( 9, 31, true ), new StartToEnd(20, 38, true ),
            new StartToEnd(19, 62, false), new StartToEnd(24, 87, false),
            new StartToEnd(28, 84, true ), new StartToEnd(34, 54, false),
            new StartToEnd(40, 59, true ), new StartToEnd(51, 67, true ),
            new StartToEnd(60, 64, false), new StartToEnd(63, 81, true ),
            new StartToEnd(71, 91, true ), new StartToEnd(73, 93, false),
            new StartToEnd(76, 95, false), new StartToEnd(78, 99, false)
            };

    /*Die instance*/
    private static final DieRoll die = new DieRoll();

/*
Run game of snakes and ladders. Have 2 players and allow players to give input to do the next turn. State which player's turn it is.

For example, a turn may be as follows:
    Player 1 turn:
        (waits for user to click enter)
        You roll an 8! Move from 87 to 95. Oh no, you fall down a snake.
    Player 2 turn:
        (waits for user to click enter)
        You roll a 12. Move from 92 to 102. You win!
*/
    public static void runGame()
    {/* Method not implemented */}

    public static void main(String[] args)
    {/* make a working program */}

}

/*
Snakes and Ladders, known originally as Moksha Patam, is an ancient Indian board game regarded today as a worldwide classic. It is played between two or more players on a gameboard having numbered, gridded squares. A number of "ladders" and "snakes" are pictured on the board, each connecting two specific board squares. The object of the game is to navigate one's game piece, according to die rolls, from the start (bottom square) to the finish (top square), helped or hindered by ladders and snakes, respectively.

The game is a simple race based on sheer luck, and is popular with young children. The historic version had its roots in morality lessons, on which a player's progression up the board represented a life journey complicated by virtues (ladders) and vices (snakes). A commercial version with different morality lessons, Chutes and Ladders, has been published by Milton Bradley since the 1940s.
*/
